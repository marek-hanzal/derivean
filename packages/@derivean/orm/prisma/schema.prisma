generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model Account {
	id                String  @id @default(cuid())
	userId            String
	type              String
	provider          String
	providerAccountId String
	refresh_token     String? @db.Text
	access_token      String? @db.Text
	expires_at        Int?
	token_type        String?
	scope             String?
	id_token          String? @db.Text
	session_state     String?
	user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@unique([provider, providerAccountId])
}

model Session {
	id           String   @id @default(cuid())
	sessionToken String   @unique
	userId       String
	expires      DateTime
	user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
	id            String    @id @default(cuid())
	name          String?
	email         String?   @unique
	emailVerified DateTime?
	image         String?

	accounts Account[]
	sessions Session[]
}

model VerificationToken {
	identifier String
	token      String  @unique
	expires    DateTime

	@@unique([identifier, token])
}

model Resource {
	id             String           @id @default(cuid())
	name           String           @unique
	ProducerOutput ProducerOutput[]
	ProducerInput  ProducerInput[]
}

model Producer {
	id             String           @id @default(cuid())
	name           String           @unique
	ProducerOutput ProducerOutput[]
	ProducerInput  ProducerInput[]
}

model ProducerInput {
	id         String   @id @default(cuid())
	producerId String
	producer   Producer @relation(fields: [producerId], references: [id], onDelete: Cascade)
	resourceId String
	resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
	// Amount of resource being consumed
	amount     Float
	// Time in seconds it takes to consume given resource; zero for instant
	time       Int
}

model ProducerOutput {
	id         String   @id @default(cuid())
	producerId String
	producer   Producer @relation(fields: [producerId], references: [id], onDelete: Cascade)
	resourceId String
	resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
	// Amount of resource being produced
	amount     Float
}
