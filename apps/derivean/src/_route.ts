/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './@routes/__root'
import { Route as LocaleImport } from './@routes/$locale'
import { Route as IndexImport } from './@routes/index'
import { Route as LocaleRootImport } from './@routes/$locale/root'
import { Route as LocaleMapImport } from './@routes/$locale/map'
import { Route as LocaleGameImport } from './@routes/$locale/game'
import { Route as LocaleRootIndexImport } from './@routes/$locale/root/index'
import { Route as LocaleGameIndexImport } from './@routes/$locale/game/index'
import { Route as LocaleRootEditorImport } from './@routes/$locale/root/editor'
import { Route as LocalePublicRegisterImport } from './@routes/$locale/public/register'
import { Route as LocalePublicLogoutImport } from './@routes/$locale/public/logout'
import { Route as LocalePublicLoginImport } from './@routes/$locale/public/login'
import { Route as LocaleMapMapIdImport } from './@routes/$locale/map/$mapId'
import { Route as LocaleDbSchemaImport } from './@routes/$locale/db/schema'
import { Route as LocaleRootUserListImport } from './@routes/$locale/root/user/list'
import { Route as LocaleRootUserIdImport } from './@routes/$locale/root/user/$id'
import { Route as LocaleRootTagListImport } from './@routes/$locale/root/tag/list'
import { Route as LocaleRootResourceListImport } from './@routes/$locale/root/resource/list'
import { Route as LocaleRootResourceIdImport } from './@routes/$locale/root/resource/$id'
import { Route as LocaleRootRegionListImport } from './@routes/$locale/root/region/list'
import { Route as LocaleRootRegionIdImport } from './@routes/$locale/root/region/$id'
import { Route as LocaleRootBlueprintListImport } from './@routes/$locale/root/blueprint/list'
import { Route as LocaleRootBlueprintIdImport } from './@routes/$locale/root/blueprint/$id'
import { Route as LocaleMapMapIdViewImport } from './@routes/$locale/map/$mapId/view'
import { Route as LocaleGameBlueprintListImport } from './@routes/$locale/game/blueprint/list'
import { Route as LocaleGameBlueprintIdImport } from './@routes/$locale/game/blueprint/$id'
import { Route as LocaleRootUserIdViewImport } from './@routes/$locale/root/user/$id/view'
import { Route as LocaleRootResourceIdViewImport } from './@routes/$locale/root/resource/$id/view'
import { Route as LocaleRootRegionIdViewImport } from './@routes/$locale/root/region/$id/view'
import { Route as LocaleRootBlueprintProductionIdImport } from './@routes/$locale/root/blueprint/production/$id'
import { Route as LocaleRootBlueprintIdViewImport } from './@routes/$locale/root/blueprint/$id/view'
import { Route as LocaleRootBlueprintIdRequirementsImport } from './@routes/$locale/root/blueprint/$id/requirements'
import { Route as LocaleRootBlueprintIdProductionImport } from './@routes/$locale/root/blueprint/$id/production'
import { Route as LocaleRootBlueprintIdInventoryImport } from './@routes/$locale/root/blueprint/$id/inventory'
import { Route as LocaleRootBlueprintIdEditImport } from './@routes/$locale/root/blueprint/$id/edit'
import { Route as LocaleRootBlueprintIdDependenciesImport } from './@routes/$locale/root/blueprint/$id/dependencies'
import { Route as LocaleRootBlueprintIdConflictsImport } from './@routes/$locale/root/blueprint/$id/conflicts'
import { Route as LocaleMapMapIdLandListImport } from './@routes/$locale/map/$mapId/land/list'
import { Route as LocaleMapMapIdLandLandIdImport } from './@routes/$locale/map/$mapId/land/$landId'
import { Route as LocaleMapMapIdBuildingListImport } from './@routes/$locale/map/$mapId/building/list'
import { Route as LocaleMapMapIdBuildingBuildingIdImport } from './@routes/$locale/map/$mapId/building/$buildingId'
import { Route as LocaleMapMapIdBlueprintBlueprintIdImport } from './@routes/$locale/map/$mapId/blueprint/$blueprintId'
import { Route as LocaleGameBlueprintProductionIdImport } from './@routes/$locale/game/blueprint/production/$id'
import { Route as LocaleGameBlueprintIdViewImport } from './@routes/$locale/game/blueprint/$id/view'
import { Route as LocaleGameBlueprintIdRequirementsImport } from './@routes/$locale/game/blueprint/$id/requirements'
import { Route as LocaleGameBlueprintIdProductionImport } from './@routes/$locale/game/blueprint/$id/production'
import { Route as LocaleGameBlueprintIdDependenciesImport } from './@routes/$locale/game/blueprint/$id/dependencies'
import { Route as LocaleGameBlueprintIdConflictsImport } from './@routes/$locale/game/blueprint/$id/conflicts'
import { Route as LocaleRootUserIdBuildingListImport } from './@routes/$locale/root/user/$id/building/list'
import { Route as LocaleRootBlueprintProductionIdResourcesImport } from './@routes/$locale/root/blueprint/production/$id/resources'
import { Route as LocaleRootBlueprintProductionIdRequirementsImport } from './@routes/$locale/root/blueprint/production/$id/requirements'
import { Route as LocaleRootBlueprintProductionIdDependenciesImport } from './@routes/$locale/root/blueprint/production/$id/dependencies'
import { Route as LocaleMapMapIdRoadRoadIdViewImport } from './@routes/$locale/map/$mapId/road/$roadId/view'
import { Route as LocaleMapMapIdLandLandIdConstructionImport } from './@routes/$locale/map/$mapId/land/$landId/construction'
import { Route as LocaleMapMapIdBuildingBuildingIdViewImport } from './@routes/$locale/map/$mapId/building/$buildingId/view'
import { Route as LocaleMapMapIdBuildingBuildingIdTransportImport } from './@routes/$locale/map/$mapId/building/$buildingId/transport'
import { Route as LocaleMapMapIdBuildingBuildingIdSupplyImport } from './@routes/$locale/map/$mapId/building/$buildingId/supply'
import { Route as LocaleMapMapIdBuildingBuildingIdLinkImport } from './@routes/$locale/map/$mapId/building/$buildingId/link'
import { Route as LocaleMapMapIdBuildingBuildingIdInventoryImport } from './@routes/$locale/map/$mapId/building/$buildingId/inventory'
import { Route as LocaleMapMapIdBuildingBuildingIdDemandImport } from './@routes/$locale/map/$mapId/building/$buildingId/demand'
import { Route as LocaleMapMapIdBlueprintBlueprintIdRequirementsImport } from './@routes/$locale/map/$mapId/blueprint/$blueprintId/requirements'
import { Route as LocaleGameBlueprintProductionIdResourcesImport } from './@routes/$locale/game/blueprint/production/$id/resources'
import { Route as LocaleGameBlueprintProductionIdRequirementsImport } from './@routes/$locale/game/blueprint/production/$id/requirements'
import { Route as LocaleGameBlueprintProductionIdDependenciesImport } from './@routes/$locale/game/blueprint/production/$id/dependencies'
import { Route as LocaleMapMapIdBuildingBuildingIdProductionQueueImport } from './@routes/$locale/map/$mapId/building/$buildingId/production/queue'
import { Route as LocaleMapMapIdBuildingBuildingIdProductionListImport } from './@routes/$locale/map/$mapId/building/$buildingId/production/list'
import { Route as LocaleMapMapIdBuildingBuildingIdProductionProductionIdImport } from './@routes/$locale/map/$mapId/building/$buildingId/production/$productionId'
import { Route as LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsImport } from './@routes/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'

// Create/Update Routes

const LocaleRoute = LocaleImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleRootRoute = LocaleRootImport.update({
  id: '/root',
  path: '/root',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleMapRoute = LocaleMapImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleGameRoute = LocaleGameImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleRootIndexRoute = LocaleRootIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleGameIndexRoute = LocaleGameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleGameRoute,
} as any)

const LocaleRootEditorRoute = LocaleRootEditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocalePublicRegisterRoute = LocalePublicRegisterImport.update({
  id: '/public/register',
  path: '/public/register',
  getParentRoute: () => LocaleRoute,
} as any)

const LocalePublicLogoutRoute = LocalePublicLogoutImport.update({
  id: '/public/logout',
  path: '/public/logout',
  getParentRoute: () => LocaleRoute,
} as any)

const LocalePublicLoginRoute = LocalePublicLoginImport.update({
  id: '/public/login',
  path: '/public/login',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleMapMapIdRoute = LocaleMapMapIdImport.update({
  id: '/$mapId',
  path: '/$mapId',
  getParentRoute: () => LocaleMapRoute,
} as any)

const LocaleDbSchemaRoute = LocaleDbSchemaImport.update({
  id: '/db/schema',
  path: '/db/schema',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleRootUserListRoute = LocaleRootUserListImport.update({
  id: '/user/list',
  path: '/user/list',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootUserIdRoute = LocaleRootUserIdImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootTagListRoute = LocaleRootTagListImport.update({
  id: '/tag/list',
  path: '/tag/list',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootResourceListRoute = LocaleRootResourceListImport.update({
  id: '/resource/list',
  path: '/resource/list',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootResourceIdRoute = LocaleRootResourceIdImport.update({
  id: '/resource/$id',
  path: '/resource/$id',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootRegionListRoute = LocaleRootRegionListImport.update({
  id: '/region/list',
  path: '/region/list',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootRegionIdRoute = LocaleRootRegionIdImport.update({
  id: '/region/$id',
  path: '/region/$id',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootBlueprintListRoute = LocaleRootBlueprintListImport.update({
  id: '/blueprint/list',
  path: '/blueprint/list',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleRootBlueprintIdRoute = LocaleRootBlueprintIdImport.update({
  id: '/blueprint/$id',
  path: '/blueprint/$id',
  getParentRoute: () => LocaleRootRoute,
} as any)

const LocaleMapMapIdViewRoute = LocaleMapMapIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleMapMapIdRoute,
} as any)

const LocaleGameBlueprintListRoute = LocaleGameBlueprintListImport.update({
  id: '/blueprint/list',
  path: '/blueprint/list',
  getParentRoute: () => LocaleGameRoute,
} as any)

const LocaleGameBlueprintIdRoute = LocaleGameBlueprintIdImport.update({
  id: '/blueprint/$id',
  path: '/blueprint/$id',
  getParentRoute: () => LocaleGameRoute,
} as any)

const LocaleRootUserIdViewRoute = LocaleRootUserIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleRootUserIdRoute,
} as any)

const LocaleRootResourceIdViewRoute = LocaleRootResourceIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleRootResourceIdRoute,
} as any)

const LocaleRootRegionIdViewRoute = LocaleRootRegionIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleRootRegionIdRoute,
} as any)

const LocaleRootBlueprintProductionIdRoute =
  LocaleRootBlueprintProductionIdImport.update({
    id: '/blueprint/production/$id',
    path: '/blueprint/production/$id',
    getParentRoute: () => LocaleRootRoute,
  } as any)

const LocaleRootBlueprintIdViewRoute = LocaleRootBlueprintIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleRootBlueprintIdRoute,
} as any)

const LocaleRootBlueprintIdRequirementsRoute =
  LocaleRootBlueprintIdRequirementsImport.update({
    id: '/requirements',
    path: '/requirements',
    getParentRoute: () => LocaleRootBlueprintIdRoute,
  } as any)

const LocaleRootBlueprintIdProductionRoute =
  LocaleRootBlueprintIdProductionImport.update({
    id: '/production',
    path: '/production',
    getParentRoute: () => LocaleRootBlueprintIdRoute,
  } as any)

const LocaleRootBlueprintIdInventoryRoute =
  LocaleRootBlueprintIdInventoryImport.update({
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => LocaleRootBlueprintIdRoute,
  } as any)

const LocaleRootBlueprintIdEditRoute = LocaleRootBlueprintIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => LocaleRootBlueprintIdRoute,
} as any)

const LocaleRootBlueprintIdDependenciesRoute =
  LocaleRootBlueprintIdDependenciesImport.update({
    id: '/dependencies',
    path: '/dependencies',
    getParentRoute: () => LocaleRootBlueprintIdRoute,
  } as any)

const LocaleRootBlueprintIdConflictsRoute =
  LocaleRootBlueprintIdConflictsImport.update({
    id: '/conflicts',
    path: '/conflicts',
    getParentRoute: () => LocaleRootBlueprintIdRoute,
  } as any)

const LocaleMapMapIdLandListRoute = LocaleMapMapIdLandListImport.update({
  id: '/land/list',
  path: '/land/list',
  getParentRoute: () => LocaleMapMapIdRoute,
} as any)

const LocaleMapMapIdLandLandIdRoute = LocaleMapMapIdLandLandIdImport.update({
  id: '/land/$landId',
  path: '/land/$landId',
  getParentRoute: () => LocaleMapMapIdRoute,
} as any)

const LocaleMapMapIdBuildingListRoute = LocaleMapMapIdBuildingListImport.update(
  {
    id: '/building/list',
    path: '/building/list',
    getParentRoute: () => LocaleMapMapIdRoute,
  } as any,
)

const LocaleMapMapIdBuildingBuildingIdRoute =
  LocaleMapMapIdBuildingBuildingIdImport.update({
    id: '/building/$buildingId',
    path: '/building/$buildingId',
    getParentRoute: () => LocaleMapMapIdRoute,
  } as any)

const LocaleMapMapIdBlueprintBlueprintIdRoute =
  LocaleMapMapIdBlueprintBlueprintIdImport.update({
    id: '/blueprint/$blueprintId',
    path: '/blueprint/$blueprintId',
    getParentRoute: () => LocaleMapMapIdRoute,
  } as any)

const LocaleGameBlueprintProductionIdRoute =
  LocaleGameBlueprintProductionIdImport.update({
    id: '/blueprint/production/$id',
    path: '/blueprint/production/$id',
    getParentRoute: () => LocaleGameRoute,
  } as any)

const LocaleGameBlueprintIdViewRoute = LocaleGameBlueprintIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleGameBlueprintIdRoute,
} as any)

const LocaleGameBlueprintIdRequirementsRoute =
  LocaleGameBlueprintIdRequirementsImport.update({
    id: '/requirements',
    path: '/requirements',
    getParentRoute: () => LocaleGameBlueprintIdRoute,
  } as any)

const LocaleGameBlueprintIdProductionRoute =
  LocaleGameBlueprintIdProductionImport.update({
    id: '/production',
    path: '/production',
    getParentRoute: () => LocaleGameBlueprintIdRoute,
  } as any)

const LocaleGameBlueprintIdDependenciesRoute =
  LocaleGameBlueprintIdDependenciesImport.update({
    id: '/dependencies',
    path: '/dependencies',
    getParentRoute: () => LocaleGameBlueprintIdRoute,
  } as any)

const LocaleGameBlueprintIdConflictsRoute =
  LocaleGameBlueprintIdConflictsImport.update({
    id: '/conflicts',
    path: '/conflicts',
    getParentRoute: () => LocaleGameBlueprintIdRoute,
  } as any)

const LocaleRootUserIdBuildingListRoute =
  LocaleRootUserIdBuildingListImport.update({
    id: '/building/list',
    path: '/building/list',
    getParentRoute: () => LocaleRootUserIdRoute,
  } as any)

const LocaleRootBlueprintProductionIdResourcesRoute =
  LocaleRootBlueprintProductionIdResourcesImport.update({
    id: '/resources',
    path: '/resources',
    getParentRoute: () => LocaleRootBlueprintProductionIdRoute,
  } as any)

const LocaleRootBlueprintProductionIdRequirementsRoute =
  LocaleRootBlueprintProductionIdRequirementsImport.update({
    id: '/requirements',
    path: '/requirements',
    getParentRoute: () => LocaleRootBlueprintProductionIdRoute,
  } as any)

const LocaleRootBlueprintProductionIdDependenciesRoute =
  LocaleRootBlueprintProductionIdDependenciesImport.update({
    id: '/dependencies',
    path: '/dependencies',
    getParentRoute: () => LocaleRootBlueprintProductionIdRoute,
  } as any)

const LocaleMapMapIdRoadRoadIdViewRoute =
  LocaleMapMapIdRoadRoadIdViewImport.update({
    id: '/road/$roadId/view',
    path: '/road/$roadId/view',
    getParentRoute: () => LocaleMapMapIdRoute,
  } as any)

const LocaleMapMapIdLandLandIdConstructionRoute =
  LocaleMapMapIdLandLandIdConstructionImport.update({
    id: '/construction',
    path: '/construction',
    getParentRoute: () => LocaleMapMapIdLandLandIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdViewRoute =
  LocaleMapMapIdBuildingBuildingIdViewImport.update({
    id: '/view',
    path: '/view',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdTransportRoute =
  LocaleMapMapIdBuildingBuildingIdTransportImport.update({
    id: '/transport',
    path: '/transport',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdSupplyRoute =
  LocaleMapMapIdBuildingBuildingIdSupplyImport.update({
    id: '/supply',
    path: '/supply',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdLinkRoute =
  LocaleMapMapIdBuildingBuildingIdLinkImport.update({
    id: '/link',
    path: '/link',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdInventoryRoute =
  LocaleMapMapIdBuildingBuildingIdInventoryImport.update({
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdDemandRoute =
  LocaleMapMapIdBuildingBuildingIdDemandImport.update({
    id: '/demand',
    path: '/demand',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute =
  LocaleMapMapIdBlueprintBlueprintIdRequirementsImport.update({
    id: '/requirements',
    path: '/requirements',
    getParentRoute: () => LocaleMapMapIdBlueprintBlueprintIdRoute,
  } as any)

const LocaleGameBlueprintProductionIdResourcesRoute =
  LocaleGameBlueprintProductionIdResourcesImport.update({
    id: '/resources',
    path: '/resources',
    getParentRoute: () => LocaleGameBlueprintProductionIdRoute,
  } as any)

const LocaleGameBlueprintProductionIdRequirementsRoute =
  LocaleGameBlueprintProductionIdRequirementsImport.update({
    id: '/requirements',
    path: '/requirements',
    getParentRoute: () => LocaleGameBlueprintProductionIdRoute,
  } as any)

const LocaleGameBlueprintProductionIdDependenciesRoute =
  LocaleGameBlueprintProductionIdDependenciesImport.update({
    id: '/dependencies',
    path: '/dependencies',
    getParentRoute: () => LocaleGameBlueprintProductionIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdProductionQueueRoute =
  LocaleMapMapIdBuildingBuildingIdProductionQueueImport.update({
    id: '/production/queue',
    path: '/production/queue',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdProductionListRoute =
  LocaleMapMapIdBuildingBuildingIdProductionListImport.update({
    id: '/production/list',
    path: '/production/list',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdProductionProductionIdRoute =
  LocaleMapMapIdBuildingBuildingIdProductionProductionIdImport.update({
    id: '/production/$productionId',
    path: '/production/$productionId',
    getParentRoute: () => LocaleMapMapIdBuildingBuildingIdRoute,
  } as any)

const LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute =
  LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsImport.update(
    {
      id: '/requirements',
      path: '/requirements',
      getParentRoute: () =>
        LocaleMapMapIdBuildingBuildingIdProductionProductionIdRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleImport
      parentRoute: typeof rootRoute
    }
    '/$locale/game': {
      id: '/$locale/game'
      path: '/game'
      fullPath: '/$locale/game'
      preLoaderRoute: typeof LocaleGameImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/map': {
      id: '/$locale/map'
      path: '/map'
      fullPath: '/$locale/map'
      preLoaderRoute: typeof LocaleMapImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/root': {
      id: '/$locale/root'
      path: '/root'
      fullPath: '/$locale/root'
      preLoaderRoute: typeof LocaleRootImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/db/schema': {
      id: '/$locale/db/schema'
      path: '/db/schema'
      fullPath: '/$locale/db/schema'
      preLoaderRoute: typeof LocaleDbSchemaImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/map/$mapId': {
      id: '/$locale/map/$mapId'
      path: '/$mapId'
      fullPath: '/$locale/map/$mapId'
      preLoaderRoute: typeof LocaleMapMapIdImport
      parentRoute: typeof LocaleMapImport
    }
    '/$locale/public/login': {
      id: '/$locale/public/login'
      path: '/public/login'
      fullPath: '/$locale/public/login'
      preLoaderRoute: typeof LocalePublicLoginImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/public/logout': {
      id: '/$locale/public/logout'
      path: '/public/logout'
      fullPath: '/$locale/public/logout'
      preLoaderRoute: typeof LocalePublicLogoutImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/public/register': {
      id: '/$locale/public/register'
      path: '/public/register'
      fullPath: '/$locale/public/register'
      preLoaderRoute: typeof LocalePublicRegisterImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/root/editor': {
      id: '/$locale/root/editor'
      path: '/editor'
      fullPath: '/$locale/root/editor'
      preLoaderRoute: typeof LocaleRootEditorImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/game/': {
      id: '/$locale/game/'
      path: '/'
      fullPath: '/$locale/game/'
      preLoaderRoute: typeof LocaleGameIndexImport
      parentRoute: typeof LocaleGameImport
    }
    '/$locale/root/': {
      id: '/$locale/root/'
      path: '/'
      fullPath: '/$locale/root/'
      preLoaderRoute: typeof LocaleRootIndexImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/game/blueprint/$id': {
      id: '/$locale/game/blueprint/$id'
      path: '/blueprint/$id'
      fullPath: '/$locale/game/blueprint/$id'
      preLoaderRoute: typeof LocaleGameBlueprintIdImport
      parentRoute: typeof LocaleGameImport
    }
    '/$locale/game/blueprint/list': {
      id: '/$locale/game/blueprint/list'
      path: '/blueprint/list'
      fullPath: '/$locale/game/blueprint/list'
      preLoaderRoute: typeof LocaleGameBlueprintListImport
      parentRoute: typeof LocaleGameImport
    }
    '/$locale/map/$mapId/view': {
      id: '/$locale/map/$mapId/view'
      path: '/view'
      fullPath: '/$locale/map/$mapId/view'
      preLoaderRoute: typeof LocaleMapMapIdViewImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/root/blueprint/$id': {
      id: '/$locale/root/blueprint/$id'
      path: '/blueprint/$id'
      fullPath: '/$locale/root/blueprint/$id'
      preLoaderRoute: typeof LocaleRootBlueprintIdImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/blueprint/list': {
      id: '/$locale/root/blueprint/list'
      path: '/blueprint/list'
      fullPath: '/$locale/root/blueprint/list'
      preLoaderRoute: typeof LocaleRootBlueprintListImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/region/$id': {
      id: '/$locale/root/region/$id'
      path: '/region/$id'
      fullPath: '/$locale/root/region/$id'
      preLoaderRoute: typeof LocaleRootRegionIdImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/region/list': {
      id: '/$locale/root/region/list'
      path: '/region/list'
      fullPath: '/$locale/root/region/list'
      preLoaderRoute: typeof LocaleRootRegionListImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/resource/$id': {
      id: '/$locale/root/resource/$id'
      path: '/resource/$id'
      fullPath: '/$locale/root/resource/$id'
      preLoaderRoute: typeof LocaleRootResourceIdImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/resource/list': {
      id: '/$locale/root/resource/list'
      path: '/resource/list'
      fullPath: '/$locale/root/resource/list'
      preLoaderRoute: typeof LocaleRootResourceListImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/tag/list': {
      id: '/$locale/root/tag/list'
      path: '/tag/list'
      fullPath: '/$locale/root/tag/list'
      preLoaderRoute: typeof LocaleRootTagListImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/user/$id': {
      id: '/$locale/root/user/$id'
      path: '/user/$id'
      fullPath: '/$locale/root/user/$id'
      preLoaderRoute: typeof LocaleRootUserIdImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/user/list': {
      id: '/$locale/root/user/list'
      path: '/user/list'
      fullPath: '/$locale/root/user/list'
      preLoaderRoute: typeof LocaleRootUserListImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/game/blueprint/$id/conflicts': {
      id: '/$locale/game/blueprint/$id/conflicts'
      path: '/conflicts'
      fullPath: '/$locale/game/blueprint/$id/conflicts'
      preLoaderRoute: typeof LocaleGameBlueprintIdConflictsImport
      parentRoute: typeof LocaleGameBlueprintIdImport
    }
    '/$locale/game/blueprint/$id/dependencies': {
      id: '/$locale/game/blueprint/$id/dependencies'
      path: '/dependencies'
      fullPath: '/$locale/game/blueprint/$id/dependencies'
      preLoaderRoute: typeof LocaleGameBlueprintIdDependenciesImport
      parentRoute: typeof LocaleGameBlueprintIdImport
    }
    '/$locale/game/blueprint/$id/production': {
      id: '/$locale/game/blueprint/$id/production'
      path: '/production'
      fullPath: '/$locale/game/blueprint/$id/production'
      preLoaderRoute: typeof LocaleGameBlueprintIdProductionImport
      parentRoute: typeof LocaleGameBlueprintIdImport
    }
    '/$locale/game/blueprint/$id/requirements': {
      id: '/$locale/game/blueprint/$id/requirements'
      path: '/requirements'
      fullPath: '/$locale/game/blueprint/$id/requirements'
      preLoaderRoute: typeof LocaleGameBlueprintIdRequirementsImport
      parentRoute: typeof LocaleGameBlueprintIdImport
    }
    '/$locale/game/blueprint/$id/view': {
      id: '/$locale/game/blueprint/$id/view'
      path: '/view'
      fullPath: '/$locale/game/blueprint/$id/view'
      preLoaderRoute: typeof LocaleGameBlueprintIdViewImport
      parentRoute: typeof LocaleGameBlueprintIdImport
    }
    '/$locale/game/blueprint/production/$id': {
      id: '/$locale/game/blueprint/production/$id'
      path: '/blueprint/production/$id'
      fullPath: '/$locale/game/blueprint/production/$id'
      preLoaderRoute: typeof LocaleGameBlueprintProductionIdImport
      parentRoute: typeof LocaleGameImport
    }
    '/$locale/map/$mapId/blueprint/$blueprintId': {
      id: '/$locale/map/$mapId/blueprint/$blueprintId'
      path: '/blueprint/$blueprintId'
      fullPath: '/$locale/map/$mapId/blueprint/$blueprintId'
      preLoaderRoute: typeof LocaleMapMapIdBlueprintBlueprintIdImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/map/$mapId/building/$buildingId': {
      id: '/$locale/map/$mapId/building/$buildingId'
      path: '/building/$buildingId'
      fullPath: '/$locale/map/$mapId/building/$buildingId'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/map/$mapId/building/list': {
      id: '/$locale/map/$mapId/building/list'
      path: '/building/list'
      fullPath: '/$locale/map/$mapId/building/list'
      preLoaderRoute: typeof LocaleMapMapIdBuildingListImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/map/$mapId/land/$landId': {
      id: '/$locale/map/$mapId/land/$landId'
      path: '/land/$landId'
      fullPath: '/$locale/map/$mapId/land/$landId'
      preLoaderRoute: typeof LocaleMapMapIdLandLandIdImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/map/$mapId/land/list': {
      id: '/$locale/map/$mapId/land/list'
      path: '/land/list'
      fullPath: '/$locale/map/$mapId/land/list'
      preLoaderRoute: typeof LocaleMapMapIdLandListImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/root/blueprint/$id/conflicts': {
      id: '/$locale/root/blueprint/$id/conflicts'
      path: '/conflicts'
      fullPath: '/$locale/root/blueprint/$id/conflicts'
      preLoaderRoute: typeof LocaleRootBlueprintIdConflictsImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/dependencies': {
      id: '/$locale/root/blueprint/$id/dependencies'
      path: '/dependencies'
      fullPath: '/$locale/root/blueprint/$id/dependencies'
      preLoaderRoute: typeof LocaleRootBlueprintIdDependenciesImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/edit': {
      id: '/$locale/root/blueprint/$id/edit'
      path: '/edit'
      fullPath: '/$locale/root/blueprint/$id/edit'
      preLoaderRoute: typeof LocaleRootBlueprintIdEditImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/inventory': {
      id: '/$locale/root/blueprint/$id/inventory'
      path: '/inventory'
      fullPath: '/$locale/root/blueprint/$id/inventory'
      preLoaderRoute: typeof LocaleRootBlueprintIdInventoryImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/production': {
      id: '/$locale/root/blueprint/$id/production'
      path: '/production'
      fullPath: '/$locale/root/blueprint/$id/production'
      preLoaderRoute: typeof LocaleRootBlueprintIdProductionImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/requirements': {
      id: '/$locale/root/blueprint/$id/requirements'
      path: '/requirements'
      fullPath: '/$locale/root/blueprint/$id/requirements'
      preLoaderRoute: typeof LocaleRootBlueprintIdRequirementsImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/$id/view': {
      id: '/$locale/root/blueprint/$id/view'
      path: '/view'
      fullPath: '/$locale/root/blueprint/$id/view'
      preLoaderRoute: typeof LocaleRootBlueprintIdViewImport
      parentRoute: typeof LocaleRootBlueprintIdImport
    }
    '/$locale/root/blueprint/production/$id': {
      id: '/$locale/root/blueprint/production/$id'
      path: '/blueprint/production/$id'
      fullPath: '/$locale/root/blueprint/production/$id'
      preLoaderRoute: typeof LocaleRootBlueprintProductionIdImport
      parentRoute: typeof LocaleRootImport
    }
    '/$locale/root/region/$id/view': {
      id: '/$locale/root/region/$id/view'
      path: '/view'
      fullPath: '/$locale/root/region/$id/view'
      preLoaderRoute: typeof LocaleRootRegionIdViewImport
      parentRoute: typeof LocaleRootRegionIdImport
    }
    '/$locale/root/resource/$id/view': {
      id: '/$locale/root/resource/$id/view'
      path: '/view'
      fullPath: '/$locale/root/resource/$id/view'
      preLoaderRoute: typeof LocaleRootResourceIdViewImport
      parentRoute: typeof LocaleRootResourceIdImport
    }
    '/$locale/root/user/$id/view': {
      id: '/$locale/root/user/$id/view'
      path: '/view'
      fullPath: '/$locale/root/user/$id/view'
      preLoaderRoute: typeof LocaleRootUserIdViewImport
      parentRoute: typeof LocaleRootUserIdImport
    }
    '/$locale/game/blueprint/production/$id/dependencies': {
      id: '/$locale/game/blueprint/production/$id/dependencies'
      path: '/dependencies'
      fullPath: '/$locale/game/blueprint/production/$id/dependencies'
      preLoaderRoute: typeof LocaleGameBlueprintProductionIdDependenciesImport
      parentRoute: typeof LocaleGameBlueprintProductionIdImport
    }
    '/$locale/game/blueprint/production/$id/requirements': {
      id: '/$locale/game/blueprint/production/$id/requirements'
      path: '/requirements'
      fullPath: '/$locale/game/blueprint/production/$id/requirements'
      preLoaderRoute: typeof LocaleGameBlueprintProductionIdRequirementsImport
      parentRoute: typeof LocaleGameBlueprintProductionIdImport
    }
    '/$locale/game/blueprint/production/$id/resources': {
      id: '/$locale/game/blueprint/production/$id/resources'
      path: '/resources'
      fullPath: '/$locale/game/blueprint/production/$id/resources'
      preLoaderRoute: typeof LocaleGameBlueprintProductionIdResourcesImport
      parentRoute: typeof LocaleGameBlueprintProductionIdImport
    }
    '/$locale/map/$mapId/blueprint/$blueprintId/requirements': {
      id: '/$locale/map/$mapId/blueprint/$blueprintId/requirements'
      path: '/requirements'
      fullPath: '/$locale/map/$mapId/blueprint/$blueprintId/requirements'
      preLoaderRoute: typeof LocaleMapMapIdBlueprintBlueprintIdRequirementsImport
      parentRoute: typeof LocaleMapMapIdBlueprintBlueprintIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/demand': {
      id: '/$locale/map/$mapId/building/$buildingId/demand'
      path: '/demand'
      fullPath: '/$locale/map/$mapId/building/$buildingId/demand'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdDemandImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/inventory': {
      id: '/$locale/map/$mapId/building/$buildingId/inventory'
      path: '/inventory'
      fullPath: '/$locale/map/$mapId/building/$buildingId/inventory'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdInventoryImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/link': {
      id: '/$locale/map/$mapId/building/$buildingId/link'
      path: '/link'
      fullPath: '/$locale/map/$mapId/building/$buildingId/link'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdLinkImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/supply': {
      id: '/$locale/map/$mapId/building/$buildingId/supply'
      path: '/supply'
      fullPath: '/$locale/map/$mapId/building/$buildingId/supply'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdSupplyImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/transport': {
      id: '/$locale/map/$mapId/building/$buildingId/transport'
      path: '/transport'
      fullPath: '/$locale/map/$mapId/building/$buildingId/transport'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdTransportImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/view': {
      id: '/$locale/map/$mapId/building/$buildingId/view'
      path: '/view'
      fullPath: '/$locale/map/$mapId/building/$buildingId/view'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdViewImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/land/$landId/construction': {
      id: '/$locale/map/$mapId/land/$landId/construction'
      path: '/construction'
      fullPath: '/$locale/map/$mapId/land/$landId/construction'
      preLoaderRoute: typeof LocaleMapMapIdLandLandIdConstructionImport
      parentRoute: typeof LocaleMapMapIdLandLandIdImport
    }
    '/$locale/map/$mapId/road/$roadId/view': {
      id: '/$locale/map/$mapId/road/$roadId/view'
      path: '/road/$roadId/view'
      fullPath: '/$locale/map/$mapId/road/$roadId/view'
      preLoaderRoute: typeof LocaleMapMapIdRoadRoadIdViewImport
      parentRoute: typeof LocaleMapMapIdImport
    }
    '/$locale/root/blueprint/production/$id/dependencies': {
      id: '/$locale/root/blueprint/production/$id/dependencies'
      path: '/dependencies'
      fullPath: '/$locale/root/blueprint/production/$id/dependencies'
      preLoaderRoute: typeof LocaleRootBlueprintProductionIdDependenciesImport
      parentRoute: typeof LocaleRootBlueprintProductionIdImport
    }
    '/$locale/root/blueprint/production/$id/requirements': {
      id: '/$locale/root/blueprint/production/$id/requirements'
      path: '/requirements'
      fullPath: '/$locale/root/blueprint/production/$id/requirements'
      preLoaderRoute: typeof LocaleRootBlueprintProductionIdRequirementsImport
      parentRoute: typeof LocaleRootBlueprintProductionIdImport
    }
    '/$locale/root/blueprint/production/$id/resources': {
      id: '/$locale/root/blueprint/production/$id/resources'
      path: '/resources'
      fullPath: '/$locale/root/blueprint/production/$id/resources'
      preLoaderRoute: typeof LocaleRootBlueprintProductionIdResourcesImport
      parentRoute: typeof LocaleRootBlueprintProductionIdImport
    }
    '/$locale/root/user/$id/building/list': {
      id: '/$locale/root/user/$id/building/list'
      path: '/building/list'
      fullPath: '/$locale/root/user/$id/building/list'
      preLoaderRoute: typeof LocaleRootUserIdBuildingListImport
      parentRoute: typeof LocaleRootUserIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/production/$productionId': {
      id: '/$locale/map/$mapId/building/$buildingId/production/$productionId'
      path: '/production/$productionId'
      fullPath: '/$locale/map/$mapId/building/$buildingId/production/$productionId'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/production/list': {
      id: '/$locale/map/$mapId/building/$buildingId/production/list'
      path: '/production/list'
      fullPath: '/$locale/map/$mapId/building/$buildingId/production/list'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionListImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/production/queue': {
      id: '/$locale/map/$mapId/building/$buildingId/production/queue'
      path: '/production/queue'
      fullPath: '/$locale/map/$mapId/building/$buildingId/production/queue'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionQueueImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdImport
    }
    '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements': {
      id: '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'
      path: '/requirements'
      fullPath: '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'
      preLoaderRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsImport
      parentRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdImport
    }
  }
}

// Create and export the route tree

interface LocaleGameBlueprintIdRouteChildren {
  LocaleGameBlueprintIdConflictsRoute: typeof LocaleGameBlueprintIdConflictsRoute
  LocaleGameBlueprintIdDependenciesRoute: typeof LocaleGameBlueprintIdDependenciesRoute
  LocaleGameBlueprintIdProductionRoute: typeof LocaleGameBlueprintIdProductionRoute
  LocaleGameBlueprintIdRequirementsRoute: typeof LocaleGameBlueprintIdRequirementsRoute
  LocaleGameBlueprintIdViewRoute: typeof LocaleGameBlueprintIdViewRoute
}

const LocaleGameBlueprintIdRouteChildren: LocaleGameBlueprintIdRouteChildren = {
  LocaleGameBlueprintIdConflictsRoute: LocaleGameBlueprintIdConflictsRoute,
  LocaleGameBlueprintIdDependenciesRoute:
    LocaleGameBlueprintIdDependenciesRoute,
  LocaleGameBlueprintIdProductionRoute: LocaleGameBlueprintIdProductionRoute,
  LocaleGameBlueprintIdRequirementsRoute:
    LocaleGameBlueprintIdRequirementsRoute,
  LocaleGameBlueprintIdViewRoute: LocaleGameBlueprintIdViewRoute,
}

const LocaleGameBlueprintIdRouteWithChildren =
  LocaleGameBlueprintIdRoute._addFileChildren(
    LocaleGameBlueprintIdRouteChildren,
  )

interface LocaleGameBlueprintProductionIdRouteChildren {
  LocaleGameBlueprintProductionIdDependenciesRoute: typeof LocaleGameBlueprintProductionIdDependenciesRoute
  LocaleGameBlueprintProductionIdRequirementsRoute: typeof LocaleGameBlueprintProductionIdRequirementsRoute
  LocaleGameBlueprintProductionIdResourcesRoute: typeof LocaleGameBlueprintProductionIdResourcesRoute
}

const LocaleGameBlueprintProductionIdRouteChildren: LocaleGameBlueprintProductionIdRouteChildren =
  {
    LocaleGameBlueprintProductionIdDependenciesRoute:
      LocaleGameBlueprintProductionIdDependenciesRoute,
    LocaleGameBlueprintProductionIdRequirementsRoute:
      LocaleGameBlueprintProductionIdRequirementsRoute,
    LocaleGameBlueprintProductionIdResourcesRoute:
      LocaleGameBlueprintProductionIdResourcesRoute,
  }

const LocaleGameBlueprintProductionIdRouteWithChildren =
  LocaleGameBlueprintProductionIdRoute._addFileChildren(
    LocaleGameBlueprintProductionIdRouteChildren,
  )

interface LocaleGameRouteChildren {
  LocaleGameIndexRoute: typeof LocaleGameIndexRoute
  LocaleGameBlueprintIdRoute: typeof LocaleGameBlueprintIdRouteWithChildren
  LocaleGameBlueprintListRoute: typeof LocaleGameBlueprintListRoute
  LocaleGameBlueprintProductionIdRoute: typeof LocaleGameBlueprintProductionIdRouteWithChildren
}

const LocaleGameRouteChildren: LocaleGameRouteChildren = {
  LocaleGameIndexRoute: LocaleGameIndexRoute,
  LocaleGameBlueprintIdRoute: LocaleGameBlueprintIdRouteWithChildren,
  LocaleGameBlueprintListRoute: LocaleGameBlueprintListRoute,
  LocaleGameBlueprintProductionIdRoute:
    LocaleGameBlueprintProductionIdRouteWithChildren,
}

const LocaleGameRouteWithChildren = LocaleGameRoute._addFileChildren(
  LocaleGameRouteChildren,
)

interface LocaleMapMapIdBlueprintBlueprintIdRouteChildren {
  LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute: typeof LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute
}

const LocaleMapMapIdBlueprintBlueprintIdRouteChildren: LocaleMapMapIdBlueprintBlueprintIdRouteChildren =
  {
    LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute:
      LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute,
  }

const LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren =
  LocaleMapMapIdBlueprintBlueprintIdRoute._addFileChildren(
    LocaleMapMapIdBlueprintBlueprintIdRouteChildren,
  )

interface LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteChildren {
  LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute
}

const LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteChildren: LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteChildren =
  {
    LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute:
      LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute,
  }

const LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren =
  LocaleMapMapIdBuildingBuildingIdProductionProductionIdRoute._addFileChildren(
    LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteChildren,
  )

interface LocaleMapMapIdBuildingBuildingIdRouteChildren {
  LocaleMapMapIdBuildingBuildingIdDemandRoute: typeof LocaleMapMapIdBuildingBuildingIdDemandRoute
  LocaleMapMapIdBuildingBuildingIdInventoryRoute: typeof LocaleMapMapIdBuildingBuildingIdInventoryRoute
  LocaleMapMapIdBuildingBuildingIdLinkRoute: typeof LocaleMapMapIdBuildingBuildingIdLinkRoute
  LocaleMapMapIdBuildingBuildingIdSupplyRoute: typeof LocaleMapMapIdBuildingBuildingIdSupplyRoute
  LocaleMapMapIdBuildingBuildingIdTransportRoute: typeof LocaleMapMapIdBuildingBuildingIdTransportRoute
  LocaleMapMapIdBuildingBuildingIdViewRoute: typeof LocaleMapMapIdBuildingBuildingIdViewRoute
  LocaleMapMapIdBuildingBuildingIdProductionProductionIdRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren
  LocaleMapMapIdBuildingBuildingIdProductionListRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionListRoute
  LocaleMapMapIdBuildingBuildingIdProductionQueueRoute: typeof LocaleMapMapIdBuildingBuildingIdProductionQueueRoute
}

const LocaleMapMapIdBuildingBuildingIdRouteChildren: LocaleMapMapIdBuildingBuildingIdRouteChildren =
  {
    LocaleMapMapIdBuildingBuildingIdDemandRoute:
      LocaleMapMapIdBuildingBuildingIdDemandRoute,
    LocaleMapMapIdBuildingBuildingIdInventoryRoute:
      LocaleMapMapIdBuildingBuildingIdInventoryRoute,
    LocaleMapMapIdBuildingBuildingIdLinkRoute:
      LocaleMapMapIdBuildingBuildingIdLinkRoute,
    LocaleMapMapIdBuildingBuildingIdSupplyRoute:
      LocaleMapMapIdBuildingBuildingIdSupplyRoute,
    LocaleMapMapIdBuildingBuildingIdTransportRoute:
      LocaleMapMapIdBuildingBuildingIdTransportRoute,
    LocaleMapMapIdBuildingBuildingIdViewRoute:
      LocaleMapMapIdBuildingBuildingIdViewRoute,
    LocaleMapMapIdBuildingBuildingIdProductionProductionIdRoute:
      LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren,
    LocaleMapMapIdBuildingBuildingIdProductionListRoute:
      LocaleMapMapIdBuildingBuildingIdProductionListRoute,
    LocaleMapMapIdBuildingBuildingIdProductionQueueRoute:
      LocaleMapMapIdBuildingBuildingIdProductionQueueRoute,
  }

const LocaleMapMapIdBuildingBuildingIdRouteWithChildren =
  LocaleMapMapIdBuildingBuildingIdRoute._addFileChildren(
    LocaleMapMapIdBuildingBuildingIdRouteChildren,
  )

interface LocaleMapMapIdLandLandIdRouteChildren {
  LocaleMapMapIdLandLandIdConstructionRoute: typeof LocaleMapMapIdLandLandIdConstructionRoute
}

const LocaleMapMapIdLandLandIdRouteChildren: LocaleMapMapIdLandLandIdRouteChildren =
  {
    LocaleMapMapIdLandLandIdConstructionRoute:
      LocaleMapMapIdLandLandIdConstructionRoute,
  }

const LocaleMapMapIdLandLandIdRouteWithChildren =
  LocaleMapMapIdLandLandIdRoute._addFileChildren(
    LocaleMapMapIdLandLandIdRouteChildren,
  )

interface LocaleMapMapIdRouteChildren {
  LocaleMapMapIdViewRoute: typeof LocaleMapMapIdViewRoute
  LocaleMapMapIdBlueprintBlueprintIdRoute: typeof LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren
  LocaleMapMapIdBuildingBuildingIdRoute: typeof LocaleMapMapIdBuildingBuildingIdRouteWithChildren
  LocaleMapMapIdBuildingListRoute: typeof LocaleMapMapIdBuildingListRoute
  LocaleMapMapIdLandLandIdRoute: typeof LocaleMapMapIdLandLandIdRouteWithChildren
  LocaleMapMapIdLandListRoute: typeof LocaleMapMapIdLandListRoute
  LocaleMapMapIdRoadRoadIdViewRoute: typeof LocaleMapMapIdRoadRoadIdViewRoute
}

const LocaleMapMapIdRouteChildren: LocaleMapMapIdRouteChildren = {
  LocaleMapMapIdViewRoute: LocaleMapMapIdViewRoute,
  LocaleMapMapIdBlueprintBlueprintIdRoute:
    LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren,
  LocaleMapMapIdBuildingBuildingIdRoute:
    LocaleMapMapIdBuildingBuildingIdRouteWithChildren,
  LocaleMapMapIdBuildingListRoute: LocaleMapMapIdBuildingListRoute,
  LocaleMapMapIdLandLandIdRoute: LocaleMapMapIdLandLandIdRouteWithChildren,
  LocaleMapMapIdLandListRoute: LocaleMapMapIdLandListRoute,
  LocaleMapMapIdRoadRoadIdViewRoute: LocaleMapMapIdRoadRoadIdViewRoute,
}

const LocaleMapMapIdRouteWithChildren = LocaleMapMapIdRoute._addFileChildren(
  LocaleMapMapIdRouteChildren,
)

interface LocaleMapRouteChildren {
  LocaleMapMapIdRoute: typeof LocaleMapMapIdRouteWithChildren
}

const LocaleMapRouteChildren: LocaleMapRouteChildren = {
  LocaleMapMapIdRoute: LocaleMapMapIdRouteWithChildren,
}

const LocaleMapRouteWithChildren = LocaleMapRoute._addFileChildren(
  LocaleMapRouteChildren,
)

interface LocaleRootBlueprintIdRouteChildren {
  LocaleRootBlueprintIdConflictsRoute: typeof LocaleRootBlueprintIdConflictsRoute
  LocaleRootBlueprintIdDependenciesRoute: typeof LocaleRootBlueprintIdDependenciesRoute
  LocaleRootBlueprintIdEditRoute: typeof LocaleRootBlueprintIdEditRoute
  LocaleRootBlueprintIdInventoryRoute: typeof LocaleRootBlueprintIdInventoryRoute
  LocaleRootBlueprintIdProductionRoute: typeof LocaleRootBlueprintIdProductionRoute
  LocaleRootBlueprintIdRequirementsRoute: typeof LocaleRootBlueprintIdRequirementsRoute
  LocaleRootBlueprintIdViewRoute: typeof LocaleRootBlueprintIdViewRoute
}

const LocaleRootBlueprintIdRouteChildren: LocaleRootBlueprintIdRouteChildren = {
  LocaleRootBlueprintIdConflictsRoute: LocaleRootBlueprintIdConflictsRoute,
  LocaleRootBlueprintIdDependenciesRoute:
    LocaleRootBlueprintIdDependenciesRoute,
  LocaleRootBlueprintIdEditRoute: LocaleRootBlueprintIdEditRoute,
  LocaleRootBlueprintIdInventoryRoute: LocaleRootBlueprintIdInventoryRoute,
  LocaleRootBlueprintIdProductionRoute: LocaleRootBlueprintIdProductionRoute,
  LocaleRootBlueprintIdRequirementsRoute:
    LocaleRootBlueprintIdRequirementsRoute,
  LocaleRootBlueprintIdViewRoute: LocaleRootBlueprintIdViewRoute,
}

const LocaleRootBlueprintIdRouteWithChildren =
  LocaleRootBlueprintIdRoute._addFileChildren(
    LocaleRootBlueprintIdRouteChildren,
  )

interface LocaleRootRegionIdRouteChildren {
  LocaleRootRegionIdViewRoute: typeof LocaleRootRegionIdViewRoute
}

const LocaleRootRegionIdRouteChildren: LocaleRootRegionIdRouteChildren = {
  LocaleRootRegionIdViewRoute: LocaleRootRegionIdViewRoute,
}

const LocaleRootRegionIdRouteWithChildren =
  LocaleRootRegionIdRoute._addFileChildren(LocaleRootRegionIdRouteChildren)

interface LocaleRootResourceIdRouteChildren {
  LocaleRootResourceIdViewRoute: typeof LocaleRootResourceIdViewRoute
}

const LocaleRootResourceIdRouteChildren: LocaleRootResourceIdRouteChildren = {
  LocaleRootResourceIdViewRoute: LocaleRootResourceIdViewRoute,
}

const LocaleRootResourceIdRouteWithChildren =
  LocaleRootResourceIdRoute._addFileChildren(LocaleRootResourceIdRouteChildren)

interface LocaleRootUserIdRouteChildren {
  LocaleRootUserIdViewRoute: typeof LocaleRootUserIdViewRoute
  LocaleRootUserIdBuildingListRoute: typeof LocaleRootUserIdBuildingListRoute
}

const LocaleRootUserIdRouteChildren: LocaleRootUserIdRouteChildren = {
  LocaleRootUserIdViewRoute: LocaleRootUserIdViewRoute,
  LocaleRootUserIdBuildingListRoute: LocaleRootUserIdBuildingListRoute,
}

const LocaleRootUserIdRouteWithChildren =
  LocaleRootUserIdRoute._addFileChildren(LocaleRootUserIdRouteChildren)

interface LocaleRootBlueprintProductionIdRouteChildren {
  LocaleRootBlueprintProductionIdDependenciesRoute: typeof LocaleRootBlueprintProductionIdDependenciesRoute
  LocaleRootBlueprintProductionIdRequirementsRoute: typeof LocaleRootBlueprintProductionIdRequirementsRoute
  LocaleRootBlueprintProductionIdResourcesRoute: typeof LocaleRootBlueprintProductionIdResourcesRoute
}

const LocaleRootBlueprintProductionIdRouteChildren: LocaleRootBlueprintProductionIdRouteChildren =
  {
    LocaleRootBlueprintProductionIdDependenciesRoute:
      LocaleRootBlueprintProductionIdDependenciesRoute,
    LocaleRootBlueprintProductionIdRequirementsRoute:
      LocaleRootBlueprintProductionIdRequirementsRoute,
    LocaleRootBlueprintProductionIdResourcesRoute:
      LocaleRootBlueprintProductionIdResourcesRoute,
  }

const LocaleRootBlueprintProductionIdRouteWithChildren =
  LocaleRootBlueprintProductionIdRoute._addFileChildren(
    LocaleRootBlueprintProductionIdRouteChildren,
  )

interface LocaleRootRouteChildren {
  LocaleRootEditorRoute: typeof LocaleRootEditorRoute
  LocaleRootIndexRoute: typeof LocaleRootIndexRoute
  LocaleRootBlueprintIdRoute: typeof LocaleRootBlueprintIdRouteWithChildren
  LocaleRootBlueprintListRoute: typeof LocaleRootBlueprintListRoute
  LocaleRootRegionIdRoute: typeof LocaleRootRegionIdRouteWithChildren
  LocaleRootRegionListRoute: typeof LocaleRootRegionListRoute
  LocaleRootResourceIdRoute: typeof LocaleRootResourceIdRouteWithChildren
  LocaleRootResourceListRoute: typeof LocaleRootResourceListRoute
  LocaleRootTagListRoute: typeof LocaleRootTagListRoute
  LocaleRootUserIdRoute: typeof LocaleRootUserIdRouteWithChildren
  LocaleRootUserListRoute: typeof LocaleRootUserListRoute
  LocaleRootBlueprintProductionIdRoute: typeof LocaleRootBlueprintProductionIdRouteWithChildren
}

const LocaleRootRouteChildren: LocaleRootRouteChildren = {
  LocaleRootEditorRoute: LocaleRootEditorRoute,
  LocaleRootIndexRoute: LocaleRootIndexRoute,
  LocaleRootBlueprintIdRoute: LocaleRootBlueprintIdRouteWithChildren,
  LocaleRootBlueprintListRoute: LocaleRootBlueprintListRoute,
  LocaleRootRegionIdRoute: LocaleRootRegionIdRouteWithChildren,
  LocaleRootRegionListRoute: LocaleRootRegionListRoute,
  LocaleRootResourceIdRoute: LocaleRootResourceIdRouteWithChildren,
  LocaleRootResourceListRoute: LocaleRootResourceListRoute,
  LocaleRootTagListRoute: LocaleRootTagListRoute,
  LocaleRootUserIdRoute: LocaleRootUserIdRouteWithChildren,
  LocaleRootUserListRoute: LocaleRootUserListRoute,
  LocaleRootBlueprintProductionIdRoute:
    LocaleRootBlueprintProductionIdRouteWithChildren,
}

const LocaleRootRouteWithChildren = LocaleRootRoute._addFileChildren(
  LocaleRootRouteChildren,
)

interface LocaleRouteChildren {
  LocaleGameRoute: typeof LocaleGameRouteWithChildren
  LocaleMapRoute: typeof LocaleMapRouteWithChildren
  LocaleRootRoute: typeof LocaleRootRouteWithChildren
  LocaleDbSchemaRoute: typeof LocaleDbSchemaRoute
  LocalePublicLoginRoute: typeof LocalePublicLoginRoute
  LocalePublicLogoutRoute: typeof LocalePublicLogoutRoute
  LocalePublicRegisterRoute: typeof LocalePublicRegisterRoute
}

const LocaleRouteChildren: LocaleRouteChildren = {
  LocaleGameRoute: LocaleGameRouteWithChildren,
  LocaleMapRoute: LocaleMapRouteWithChildren,
  LocaleRootRoute: LocaleRootRouteWithChildren,
  LocaleDbSchemaRoute: LocaleDbSchemaRoute,
  LocalePublicLoginRoute: LocalePublicLoginRoute,
  LocalePublicLogoutRoute: LocalePublicLogoutRoute,
  LocalePublicRegisterRoute: LocalePublicRegisterRoute,
}

const LocaleRouteWithChildren =
  LocaleRoute._addFileChildren(LocaleRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/game': typeof LocaleGameRouteWithChildren
  '/$locale/map': typeof LocaleMapRouteWithChildren
  '/$locale/root': typeof LocaleRootRouteWithChildren
  '/$locale/db/schema': typeof LocaleDbSchemaRoute
  '/$locale/map/$mapId': typeof LocaleMapMapIdRouteWithChildren
  '/$locale/public/login': typeof LocalePublicLoginRoute
  '/$locale/public/logout': typeof LocalePublicLogoutRoute
  '/$locale/public/register': typeof LocalePublicRegisterRoute
  '/$locale/root/editor': typeof LocaleRootEditorRoute
  '/$locale/game/': typeof LocaleGameIndexRoute
  '/$locale/root/': typeof LocaleRootIndexRoute
  '/$locale/game/blueprint/$id': typeof LocaleGameBlueprintIdRouteWithChildren
  '/$locale/game/blueprint/list': typeof LocaleGameBlueprintListRoute
  '/$locale/map/$mapId/view': typeof LocaleMapMapIdViewRoute
  '/$locale/root/blueprint/$id': typeof LocaleRootBlueprintIdRouteWithChildren
  '/$locale/root/blueprint/list': typeof LocaleRootBlueprintListRoute
  '/$locale/root/region/$id': typeof LocaleRootRegionIdRouteWithChildren
  '/$locale/root/region/list': typeof LocaleRootRegionListRoute
  '/$locale/root/resource/$id': typeof LocaleRootResourceIdRouteWithChildren
  '/$locale/root/resource/list': typeof LocaleRootResourceListRoute
  '/$locale/root/tag/list': typeof LocaleRootTagListRoute
  '/$locale/root/user/$id': typeof LocaleRootUserIdRouteWithChildren
  '/$locale/root/user/list': typeof LocaleRootUserListRoute
  '/$locale/game/blueprint/$id/conflicts': typeof LocaleGameBlueprintIdConflictsRoute
  '/$locale/game/blueprint/$id/dependencies': typeof LocaleGameBlueprintIdDependenciesRoute
  '/$locale/game/blueprint/$id/production': typeof LocaleGameBlueprintIdProductionRoute
  '/$locale/game/blueprint/$id/requirements': typeof LocaleGameBlueprintIdRequirementsRoute
  '/$locale/game/blueprint/$id/view': typeof LocaleGameBlueprintIdViewRoute
  '/$locale/game/blueprint/production/$id': typeof LocaleGameBlueprintProductionIdRouteWithChildren
  '/$locale/map/$mapId/blueprint/$blueprintId': typeof LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId': typeof LocaleMapMapIdBuildingBuildingIdRouteWithChildren
  '/$locale/map/$mapId/building/list': typeof LocaleMapMapIdBuildingListRoute
  '/$locale/map/$mapId/land/$landId': typeof LocaleMapMapIdLandLandIdRouteWithChildren
  '/$locale/map/$mapId/land/list': typeof LocaleMapMapIdLandListRoute
  '/$locale/root/blueprint/$id/conflicts': typeof LocaleRootBlueprintIdConflictsRoute
  '/$locale/root/blueprint/$id/dependencies': typeof LocaleRootBlueprintIdDependenciesRoute
  '/$locale/root/blueprint/$id/edit': typeof LocaleRootBlueprintIdEditRoute
  '/$locale/root/blueprint/$id/inventory': typeof LocaleRootBlueprintIdInventoryRoute
  '/$locale/root/blueprint/$id/production': typeof LocaleRootBlueprintIdProductionRoute
  '/$locale/root/blueprint/$id/requirements': typeof LocaleRootBlueprintIdRequirementsRoute
  '/$locale/root/blueprint/$id/view': typeof LocaleRootBlueprintIdViewRoute
  '/$locale/root/blueprint/production/$id': typeof LocaleRootBlueprintProductionIdRouteWithChildren
  '/$locale/root/region/$id/view': typeof LocaleRootRegionIdViewRoute
  '/$locale/root/resource/$id/view': typeof LocaleRootResourceIdViewRoute
  '/$locale/root/user/$id/view': typeof LocaleRootUserIdViewRoute
  '/$locale/game/blueprint/production/$id/dependencies': typeof LocaleGameBlueprintProductionIdDependenciesRoute
  '/$locale/game/blueprint/production/$id/requirements': typeof LocaleGameBlueprintProductionIdRequirementsRoute
  '/$locale/game/blueprint/production/$id/resources': typeof LocaleGameBlueprintProductionIdResourcesRoute
  '/$locale/map/$mapId/blueprint/$blueprintId/requirements': typeof LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute
  '/$locale/map/$mapId/building/$buildingId/demand': typeof LocaleMapMapIdBuildingBuildingIdDemandRoute
  '/$locale/map/$mapId/building/$buildingId/inventory': typeof LocaleMapMapIdBuildingBuildingIdInventoryRoute
  '/$locale/map/$mapId/building/$buildingId/link': typeof LocaleMapMapIdBuildingBuildingIdLinkRoute
  '/$locale/map/$mapId/building/$buildingId/supply': typeof LocaleMapMapIdBuildingBuildingIdSupplyRoute
  '/$locale/map/$mapId/building/$buildingId/transport': typeof LocaleMapMapIdBuildingBuildingIdTransportRoute
  '/$locale/map/$mapId/building/$buildingId/view': typeof LocaleMapMapIdBuildingBuildingIdViewRoute
  '/$locale/map/$mapId/land/$landId/construction': typeof LocaleMapMapIdLandLandIdConstructionRoute
  '/$locale/map/$mapId/road/$roadId/view': typeof LocaleMapMapIdRoadRoadIdViewRoute
  '/$locale/root/blueprint/production/$id/dependencies': typeof LocaleRootBlueprintProductionIdDependenciesRoute
  '/$locale/root/blueprint/production/$id/requirements': typeof LocaleRootBlueprintProductionIdRequirementsRoute
  '/$locale/root/blueprint/production/$id/resources': typeof LocaleRootBlueprintProductionIdResourcesRoute
  '/$locale/root/user/$id/building/list': typeof LocaleRootUserIdBuildingListRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId/production/list': typeof LocaleMapMapIdBuildingBuildingIdProductionListRoute
  '/$locale/map/$mapId/building/$buildingId/production/queue': typeof LocaleMapMapIdBuildingBuildingIdProductionQueueRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/map': typeof LocaleMapRouteWithChildren
  '/$locale/db/schema': typeof LocaleDbSchemaRoute
  '/$locale/map/$mapId': typeof LocaleMapMapIdRouteWithChildren
  '/$locale/public/login': typeof LocalePublicLoginRoute
  '/$locale/public/logout': typeof LocalePublicLogoutRoute
  '/$locale/public/register': typeof LocalePublicRegisterRoute
  '/$locale/root/editor': typeof LocaleRootEditorRoute
  '/$locale/game': typeof LocaleGameIndexRoute
  '/$locale/root': typeof LocaleRootIndexRoute
  '/$locale/game/blueprint/$id': typeof LocaleGameBlueprintIdRouteWithChildren
  '/$locale/game/blueprint/list': typeof LocaleGameBlueprintListRoute
  '/$locale/map/$mapId/view': typeof LocaleMapMapIdViewRoute
  '/$locale/root/blueprint/$id': typeof LocaleRootBlueprintIdRouteWithChildren
  '/$locale/root/blueprint/list': typeof LocaleRootBlueprintListRoute
  '/$locale/root/region/$id': typeof LocaleRootRegionIdRouteWithChildren
  '/$locale/root/region/list': typeof LocaleRootRegionListRoute
  '/$locale/root/resource/$id': typeof LocaleRootResourceIdRouteWithChildren
  '/$locale/root/resource/list': typeof LocaleRootResourceListRoute
  '/$locale/root/tag/list': typeof LocaleRootTagListRoute
  '/$locale/root/user/$id': typeof LocaleRootUserIdRouteWithChildren
  '/$locale/root/user/list': typeof LocaleRootUserListRoute
  '/$locale/game/blueprint/$id/conflicts': typeof LocaleGameBlueprintIdConflictsRoute
  '/$locale/game/blueprint/$id/dependencies': typeof LocaleGameBlueprintIdDependenciesRoute
  '/$locale/game/blueprint/$id/production': typeof LocaleGameBlueprintIdProductionRoute
  '/$locale/game/blueprint/$id/requirements': typeof LocaleGameBlueprintIdRequirementsRoute
  '/$locale/game/blueprint/$id/view': typeof LocaleGameBlueprintIdViewRoute
  '/$locale/game/blueprint/production/$id': typeof LocaleGameBlueprintProductionIdRouteWithChildren
  '/$locale/map/$mapId/blueprint/$blueprintId': typeof LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId': typeof LocaleMapMapIdBuildingBuildingIdRouteWithChildren
  '/$locale/map/$mapId/building/list': typeof LocaleMapMapIdBuildingListRoute
  '/$locale/map/$mapId/land/$landId': typeof LocaleMapMapIdLandLandIdRouteWithChildren
  '/$locale/map/$mapId/land/list': typeof LocaleMapMapIdLandListRoute
  '/$locale/root/blueprint/$id/conflicts': typeof LocaleRootBlueprintIdConflictsRoute
  '/$locale/root/blueprint/$id/dependencies': typeof LocaleRootBlueprintIdDependenciesRoute
  '/$locale/root/blueprint/$id/edit': typeof LocaleRootBlueprintIdEditRoute
  '/$locale/root/blueprint/$id/inventory': typeof LocaleRootBlueprintIdInventoryRoute
  '/$locale/root/blueprint/$id/production': typeof LocaleRootBlueprintIdProductionRoute
  '/$locale/root/blueprint/$id/requirements': typeof LocaleRootBlueprintIdRequirementsRoute
  '/$locale/root/blueprint/$id/view': typeof LocaleRootBlueprintIdViewRoute
  '/$locale/root/blueprint/production/$id': typeof LocaleRootBlueprintProductionIdRouteWithChildren
  '/$locale/root/region/$id/view': typeof LocaleRootRegionIdViewRoute
  '/$locale/root/resource/$id/view': typeof LocaleRootResourceIdViewRoute
  '/$locale/root/user/$id/view': typeof LocaleRootUserIdViewRoute
  '/$locale/game/blueprint/production/$id/dependencies': typeof LocaleGameBlueprintProductionIdDependenciesRoute
  '/$locale/game/blueprint/production/$id/requirements': typeof LocaleGameBlueprintProductionIdRequirementsRoute
  '/$locale/game/blueprint/production/$id/resources': typeof LocaleGameBlueprintProductionIdResourcesRoute
  '/$locale/map/$mapId/blueprint/$blueprintId/requirements': typeof LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute
  '/$locale/map/$mapId/building/$buildingId/demand': typeof LocaleMapMapIdBuildingBuildingIdDemandRoute
  '/$locale/map/$mapId/building/$buildingId/inventory': typeof LocaleMapMapIdBuildingBuildingIdInventoryRoute
  '/$locale/map/$mapId/building/$buildingId/link': typeof LocaleMapMapIdBuildingBuildingIdLinkRoute
  '/$locale/map/$mapId/building/$buildingId/supply': typeof LocaleMapMapIdBuildingBuildingIdSupplyRoute
  '/$locale/map/$mapId/building/$buildingId/transport': typeof LocaleMapMapIdBuildingBuildingIdTransportRoute
  '/$locale/map/$mapId/building/$buildingId/view': typeof LocaleMapMapIdBuildingBuildingIdViewRoute
  '/$locale/map/$mapId/land/$landId/construction': typeof LocaleMapMapIdLandLandIdConstructionRoute
  '/$locale/map/$mapId/road/$roadId/view': typeof LocaleMapMapIdRoadRoadIdViewRoute
  '/$locale/root/blueprint/production/$id/dependencies': typeof LocaleRootBlueprintProductionIdDependenciesRoute
  '/$locale/root/blueprint/production/$id/requirements': typeof LocaleRootBlueprintProductionIdRequirementsRoute
  '/$locale/root/blueprint/production/$id/resources': typeof LocaleRootBlueprintProductionIdResourcesRoute
  '/$locale/root/user/$id/building/list': typeof LocaleRootUserIdBuildingListRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId/production/list': typeof LocaleMapMapIdBuildingBuildingIdProductionListRoute
  '/$locale/map/$mapId/building/$buildingId/production/queue': typeof LocaleMapMapIdBuildingBuildingIdProductionQueueRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/game': typeof LocaleGameRouteWithChildren
  '/$locale/map': typeof LocaleMapRouteWithChildren
  '/$locale/root': typeof LocaleRootRouteWithChildren
  '/$locale/db/schema': typeof LocaleDbSchemaRoute
  '/$locale/map/$mapId': typeof LocaleMapMapIdRouteWithChildren
  '/$locale/public/login': typeof LocalePublicLoginRoute
  '/$locale/public/logout': typeof LocalePublicLogoutRoute
  '/$locale/public/register': typeof LocalePublicRegisterRoute
  '/$locale/root/editor': typeof LocaleRootEditorRoute
  '/$locale/game/': typeof LocaleGameIndexRoute
  '/$locale/root/': typeof LocaleRootIndexRoute
  '/$locale/game/blueprint/$id': typeof LocaleGameBlueprintIdRouteWithChildren
  '/$locale/game/blueprint/list': typeof LocaleGameBlueprintListRoute
  '/$locale/map/$mapId/view': typeof LocaleMapMapIdViewRoute
  '/$locale/root/blueprint/$id': typeof LocaleRootBlueprintIdRouteWithChildren
  '/$locale/root/blueprint/list': typeof LocaleRootBlueprintListRoute
  '/$locale/root/region/$id': typeof LocaleRootRegionIdRouteWithChildren
  '/$locale/root/region/list': typeof LocaleRootRegionListRoute
  '/$locale/root/resource/$id': typeof LocaleRootResourceIdRouteWithChildren
  '/$locale/root/resource/list': typeof LocaleRootResourceListRoute
  '/$locale/root/tag/list': typeof LocaleRootTagListRoute
  '/$locale/root/user/$id': typeof LocaleRootUserIdRouteWithChildren
  '/$locale/root/user/list': typeof LocaleRootUserListRoute
  '/$locale/game/blueprint/$id/conflicts': typeof LocaleGameBlueprintIdConflictsRoute
  '/$locale/game/blueprint/$id/dependencies': typeof LocaleGameBlueprintIdDependenciesRoute
  '/$locale/game/blueprint/$id/production': typeof LocaleGameBlueprintIdProductionRoute
  '/$locale/game/blueprint/$id/requirements': typeof LocaleGameBlueprintIdRequirementsRoute
  '/$locale/game/blueprint/$id/view': typeof LocaleGameBlueprintIdViewRoute
  '/$locale/game/blueprint/production/$id': typeof LocaleGameBlueprintProductionIdRouteWithChildren
  '/$locale/map/$mapId/blueprint/$blueprintId': typeof LocaleMapMapIdBlueprintBlueprintIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId': typeof LocaleMapMapIdBuildingBuildingIdRouteWithChildren
  '/$locale/map/$mapId/building/list': typeof LocaleMapMapIdBuildingListRoute
  '/$locale/map/$mapId/land/$landId': typeof LocaleMapMapIdLandLandIdRouteWithChildren
  '/$locale/map/$mapId/land/list': typeof LocaleMapMapIdLandListRoute
  '/$locale/root/blueprint/$id/conflicts': typeof LocaleRootBlueprintIdConflictsRoute
  '/$locale/root/blueprint/$id/dependencies': typeof LocaleRootBlueprintIdDependenciesRoute
  '/$locale/root/blueprint/$id/edit': typeof LocaleRootBlueprintIdEditRoute
  '/$locale/root/blueprint/$id/inventory': typeof LocaleRootBlueprintIdInventoryRoute
  '/$locale/root/blueprint/$id/production': typeof LocaleRootBlueprintIdProductionRoute
  '/$locale/root/blueprint/$id/requirements': typeof LocaleRootBlueprintIdRequirementsRoute
  '/$locale/root/blueprint/$id/view': typeof LocaleRootBlueprintIdViewRoute
  '/$locale/root/blueprint/production/$id': typeof LocaleRootBlueprintProductionIdRouteWithChildren
  '/$locale/root/region/$id/view': typeof LocaleRootRegionIdViewRoute
  '/$locale/root/resource/$id/view': typeof LocaleRootResourceIdViewRoute
  '/$locale/root/user/$id/view': typeof LocaleRootUserIdViewRoute
  '/$locale/game/blueprint/production/$id/dependencies': typeof LocaleGameBlueprintProductionIdDependenciesRoute
  '/$locale/game/blueprint/production/$id/requirements': typeof LocaleGameBlueprintProductionIdRequirementsRoute
  '/$locale/game/blueprint/production/$id/resources': typeof LocaleGameBlueprintProductionIdResourcesRoute
  '/$locale/map/$mapId/blueprint/$blueprintId/requirements': typeof LocaleMapMapIdBlueprintBlueprintIdRequirementsRoute
  '/$locale/map/$mapId/building/$buildingId/demand': typeof LocaleMapMapIdBuildingBuildingIdDemandRoute
  '/$locale/map/$mapId/building/$buildingId/inventory': typeof LocaleMapMapIdBuildingBuildingIdInventoryRoute
  '/$locale/map/$mapId/building/$buildingId/link': typeof LocaleMapMapIdBuildingBuildingIdLinkRoute
  '/$locale/map/$mapId/building/$buildingId/supply': typeof LocaleMapMapIdBuildingBuildingIdSupplyRoute
  '/$locale/map/$mapId/building/$buildingId/transport': typeof LocaleMapMapIdBuildingBuildingIdTransportRoute
  '/$locale/map/$mapId/building/$buildingId/view': typeof LocaleMapMapIdBuildingBuildingIdViewRoute
  '/$locale/map/$mapId/land/$landId/construction': typeof LocaleMapMapIdLandLandIdConstructionRoute
  '/$locale/map/$mapId/road/$roadId/view': typeof LocaleMapMapIdRoadRoadIdViewRoute
  '/$locale/root/blueprint/production/$id/dependencies': typeof LocaleRootBlueprintProductionIdDependenciesRoute
  '/$locale/root/blueprint/production/$id/requirements': typeof LocaleRootBlueprintProductionIdRequirementsRoute
  '/$locale/root/blueprint/production/$id/resources': typeof LocaleRootBlueprintProductionIdResourcesRoute
  '/$locale/root/user/$id/building/list': typeof LocaleRootUserIdBuildingListRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRouteWithChildren
  '/$locale/map/$mapId/building/$buildingId/production/list': typeof LocaleMapMapIdBuildingBuildingIdProductionListRoute
  '/$locale/map/$mapId/building/$buildingId/production/queue': typeof LocaleMapMapIdBuildingBuildingIdProductionQueueRoute
  '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements': typeof LocaleMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale'
    | '/$locale/game'
    | '/$locale/map'
    | '/$locale/root'
    | '/$locale/db/schema'
    | '/$locale/map/$mapId'
    | '/$locale/public/login'
    | '/$locale/public/logout'
    | '/$locale/public/register'
    | '/$locale/root/editor'
    | '/$locale/game/'
    | '/$locale/root/'
    | '/$locale/game/blueprint/$id'
    | '/$locale/game/blueprint/list'
    | '/$locale/map/$mapId/view'
    | '/$locale/root/blueprint/$id'
    | '/$locale/root/blueprint/list'
    | '/$locale/root/region/$id'
    | '/$locale/root/region/list'
    | '/$locale/root/resource/$id'
    | '/$locale/root/resource/list'
    | '/$locale/root/tag/list'
    | '/$locale/root/user/$id'
    | '/$locale/root/user/list'
    | '/$locale/game/blueprint/$id/conflicts'
    | '/$locale/game/blueprint/$id/dependencies'
    | '/$locale/game/blueprint/$id/production'
    | '/$locale/game/blueprint/$id/requirements'
    | '/$locale/game/blueprint/$id/view'
    | '/$locale/game/blueprint/production/$id'
    | '/$locale/map/$mapId/blueprint/$blueprintId'
    | '/$locale/map/$mapId/building/$buildingId'
    | '/$locale/map/$mapId/building/list'
    | '/$locale/map/$mapId/land/$landId'
    | '/$locale/map/$mapId/land/list'
    | '/$locale/root/blueprint/$id/conflicts'
    | '/$locale/root/blueprint/$id/dependencies'
    | '/$locale/root/blueprint/$id/edit'
    | '/$locale/root/blueprint/$id/inventory'
    | '/$locale/root/blueprint/$id/production'
    | '/$locale/root/blueprint/$id/requirements'
    | '/$locale/root/blueprint/$id/view'
    | '/$locale/root/blueprint/production/$id'
    | '/$locale/root/region/$id/view'
    | '/$locale/root/resource/$id/view'
    | '/$locale/root/user/$id/view'
    | '/$locale/game/blueprint/production/$id/dependencies'
    | '/$locale/game/blueprint/production/$id/requirements'
    | '/$locale/game/blueprint/production/$id/resources'
    | '/$locale/map/$mapId/blueprint/$blueprintId/requirements'
    | '/$locale/map/$mapId/building/$buildingId/demand'
    | '/$locale/map/$mapId/building/$buildingId/inventory'
    | '/$locale/map/$mapId/building/$buildingId/link'
    | '/$locale/map/$mapId/building/$buildingId/supply'
    | '/$locale/map/$mapId/building/$buildingId/transport'
    | '/$locale/map/$mapId/building/$buildingId/view'
    | '/$locale/map/$mapId/land/$landId/construction'
    | '/$locale/map/$mapId/road/$roadId/view'
    | '/$locale/root/blueprint/production/$id/dependencies'
    | '/$locale/root/blueprint/production/$id/requirements'
    | '/$locale/root/blueprint/production/$id/resources'
    | '/$locale/root/user/$id/building/list'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId'
    | '/$locale/map/$mapId/building/$buildingId/production/list'
    | '/$locale/map/$mapId/building/$buildingId/production/queue'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale'
    | '/$locale/map'
    | '/$locale/db/schema'
    | '/$locale/map/$mapId'
    | '/$locale/public/login'
    | '/$locale/public/logout'
    | '/$locale/public/register'
    | '/$locale/root/editor'
    | '/$locale/game'
    | '/$locale/root'
    | '/$locale/game/blueprint/$id'
    | '/$locale/game/blueprint/list'
    | '/$locale/map/$mapId/view'
    | '/$locale/root/blueprint/$id'
    | '/$locale/root/blueprint/list'
    | '/$locale/root/region/$id'
    | '/$locale/root/region/list'
    | '/$locale/root/resource/$id'
    | '/$locale/root/resource/list'
    | '/$locale/root/tag/list'
    | '/$locale/root/user/$id'
    | '/$locale/root/user/list'
    | '/$locale/game/blueprint/$id/conflicts'
    | '/$locale/game/blueprint/$id/dependencies'
    | '/$locale/game/blueprint/$id/production'
    | '/$locale/game/blueprint/$id/requirements'
    | '/$locale/game/blueprint/$id/view'
    | '/$locale/game/blueprint/production/$id'
    | '/$locale/map/$mapId/blueprint/$blueprintId'
    | '/$locale/map/$mapId/building/$buildingId'
    | '/$locale/map/$mapId/building/list'
    | '/$locale/map/$mapId/land/$landId'
    | '/$locale/map/$mapId/land/list'
    | '/$locale/root/blueprint/$id/conflicts'
    | '/$locale/root/blueprint/$id/dependencies'
    | '/$locale/root/blueprint/$id/edit'
    | '/$locale/root/blueprint/$id/inventory'
    | '/$locale/root/blueprint/$id/production'
    | '/$locale/root/blueprint/$id/requirements'
    | '/$locale/root/blueprint/$id/view'
    | '/$locale/root/blueprint/production/$id'
    | '/$locale/root/region/$id/view'
    | '/$locale/root/resource/$id/view'
    | '/$locale/root/user/$id/view'
    | '/$locale/game/blueprint/production/$id/dependencies'
    | '/$locale/game/blueprint/production/$id/requirements'
    | '/$locale/game/blueprint/production/$id/resources'
    | '/$locale/map/$mapId/blueprint/$blueprintId/requirements'
    | '/$locale/map/$mapId/building/$buildingId/demand'
    | '/$locale/map/$mapId/building/$buildingId/inventory'
    | '/$locale/map/$mapId/building/$buildingId/link'
    | '/$locale/map/$mapId/building/$buildingId/supply'
    | '/$locale/map/$mapId/building/$buildingId/transport'
    | '/$locale/map/$mapId/building/$buildingId/view'
    | '/$locale/map/$mapId/land/$landId/construction'
    | '/$locale/map/$mapId/road/$roadId/view'
    | '/$locale/root/blueprint/production/$id/dependencies'
    | '/$locale/root/blueprint/production/$id/requirements'
    | '/$locale/root/blueprint/production/$id/resources'
    | '/$locale/root/user/$id/building/list'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId'
    | '/$locale/map/$mapId/building/$buildingId/production/list'
    | '/$locale/map/$mapId/building/$buildingId/production/queue'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'
  id:
    | '__root__'
    | '/'
    | '/$locale'
    | '/$locale/game'
    | '/$locale/map'
    | '/$locale/root'
    | '/$locale/db/schema'
    | '/$locale/map/$mapId'
    | '/$locale/public/login'
    | '/$locale/public/logout'
    | '/$locale/public/register'
    | '/$locale/root/editor'
    | '/$locale/game/'
    | '/$locale/root/'
    | '/$locale/game/blueprint/$id'
    | '/$locale/game/blueprint/list'
    | '/$locale/map/$mapId/view'
    | '/$locale/root/blueprint/$id'
    | '/$locale/root/blueprint/list'
    | '/$locale/root/region/$id'
    | '/$locale/root/region/list'
    | '/$locale/root/resource/$id'
    | '/$locale/root/resource/list'
    | '/$locale/root/tag/list'
    | '/$locale/root/user/$id'
    | '/$locale/root/user/list'
    | '/$locale/game/blueprint/$id/conflicts'
    | '/$locale/game/blueprint/$id/dependencies'
    | '/$locale/game/blueprint/$id/production'
    | '/$locale/game/blueprint/$id/requirements'
    | '/$locale/game/blueprint/$id/view'
    | '/$locale/game/blueprint/production/$id'
    | '/$locale/map/$mapId/blueprint/$blueprintId'
    | '/$locale/map/$mapId/building/$buildingId'
    | '/$locale/map/$mapId/building/list'
    | '/$locale/map/$mapId/land/$landId'
    | '/$locale/map/$mapId/land/list'
    | '/$locale/root/blueprint/$id/conflicts'
    | '/$locale/root/blueprint/$id/dependencies'
    | '/$locale/root/blueprint/$id/edit'
    | '/$locale/root/blueprint/$id/inventory'
    | '/$locale/root/blueprint/$id/production'
    | '/$locale/root/blueprint/$id/requirements'
    | '/$locale/root/blueprint/$id/view'
    | '/$locale/root/blueprint/production/$id'
    | '/$locale/root/region/$id/view'
    | '/$locale/root/resource/$id/view'
    | '/$locale/root/user/$id/view'
    | '/$locale/game/blueprint/production/$id/dependencies'
    | '/$locale/game/blueprint/production/$id/requirements'
    | '/$locale/game/blueprint/production/$id/resources'
    | '/$locale/map/$mapId/blueprint/$blueprintId/requirements'
    | '/$locale/map/$mapId/building/$buildingId/demand'
    | '/$locale/map/$mapId/building/$buildingId/inventory'
    | '/$locale/map/$mapId/building/$buildingId/link'
    | '/$locale/map/$mapId/building/$buildingId/supply'
    | '/$locale/map/$mapId/building/$buildingId/transport'
    | '/$locale/map/$mapId/building/$buildingId/view'
    | '/$locale/map/$mapId/land/$landId/construction'
    | '/$locale/map/$mapId/road/$roadId/view'
    | '/$locale/root/blueprint/production/$id/dependencies'
    | '/$locale/root/blueprint/production/$id/requirements'
    | '/$locale/root/blueprint/production/$id/resources'
    | '/$locale/root/user/$id/building/list'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId'
    | '/$locale/map/$mapId/building/$buildingId/production/list'
    | '/$locale/map/$mapId/building/$buildingId/production/queue'
    | '/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleRoute: typeof LocaleRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleRoute: LocaleRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$locale"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$locale": {
      "filePath": "$locale.tsx",
      "children": [
        "/$locale/game",
        "/$locale/map",
        "/$locale/root",
        "/$locale/db/schema",
        "/$locale/public/login",
        "/$locale/public/logout",
        "/$locale/public/register"
      ]
    },
    "/$locale/game": {
      "filePath": "$locale/game.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/game/",
        "/$locale/game/blueprint/$id",
        "/$locale/game/blueprint/list",
        "/$locale/game/blueprint/production/$id"
      ]
    },
    "/$locale/map": {
      "filePath": "$locale/map.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/map/$mapId"
      ]
    },
    "/$locale/root": {
      "filePath": "$locale/root.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/root/editor",
        "/$locale/root/",
        "/$locale/root/blueprint/$id",
        "/$locale/root/blueprint/list",
        "/$locale/root/region/$id",
        "/$locale/root/region/list",
        "/$locale/root/resource/$id",
        "/$locale/root/resource/list",
        "/$locale/root/tag/list",
        "/$locale/root/user/$id",
        "/$locale/root/user/list",
        "/$locale/root/blueprint/production/$id"
      ]
    },
    "/$locale/db/schema": {
      "filePath": "$locale/db/schema.tsx",
      "parent": "/$locale"
    },
    "/$locale/map/$mapId": {
      "filePath": "$locale/map/$mapId.tsx",
      "parent": "/$locale/map",
      "children": [
        "/$locale/map/$mapId/view",
        "/$locale/map/$mapId/blueprint/$blueprintId",
        "/$locale/map/$mapId/building/$buildingId",
        "/$locale/map/$mapId/building/list",
        "/$locale/map/$mapId/land/$landId",
        "/$locale/map/$mapId/land/list",
        "/$locale/map/$mapId/road/$roadId/view"
      ]
    },
    "/$locale/public/login": {
      "filePath": "$locale/public/login.tsx",
      "parent": "/$locale"
    },
    "/$locale/public/logout": {
      "filePath": "$locale/public/logout.tsx",
      "parent": "/$locale"
    },
    "/$locale/public/register": {
      "filePath": "$locale/public/register.tsx",
      "parent": "/$locale"
    },
    "/$locale/root/editor": {
      "filePath": "$locale/root/editor.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/game/": {
      "filePath": "$locale/game/index.tsx",
      "parent": "/$locale/game"
    },
    "/$locale/root/": {
      "filePath": "$locale/root/index.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/game/blueprint/$id": {
      "filePath": "$locale/game/blueprint/$id.tsx",
      "parent": "/$locale/game",
      "children": [
        "/$locale/game/blueprint/$id/conflicts",
        "/$locale/game/blueprint/$id/dependencies",
        "/$locale/game/blueprint/$id/production",
        "/$locale/game/blueprint/$id/requirements",
        "/$locale/game/blueprint/$id/view"
      ]
    },
    "/$locale/game/blueprint/list": {
      "filePath": "$locale/game/blueprint/list.tsx",
      "parent": "/$locale/game"
    },
    "/$locale/map/$mapId/view": {
      "filePath": "$locale/map/$mapId/view.tsx",
      "parent": "/$locale/map/$mapId"
    },
    "/$locale/root/blueprint/$id": {
      "filePath": "$locale/root/blueprint/$id.tsx",
      "parent": "/$locale/root",
      "children": [
        "/$locale/root/blueprint/$id/conflicts",
        "/$locale/root/blueprint/$id/dependencies",
        "/$locale/root/blueprint/$id/edit",
        "/$locale/root/blueprint/$id/inventory",
        "/$locale/root/blueprint/$id/production",
        "/$locale/root/blueprint/$id/requirements",
        "/$locale/root/blueprint/$id/view"
      ]
    },
    "/$locale/root/blueprint/list": {
      "filePath": "$locale/root/blueprint/list.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/root/region/$id": {
      "filePath": "$locale/root/region/$id.tsx",
      "parent": "/$locale/root",
      "children": [
        "/$locale/root/region/$id/view"
      ]
    },
    "/$locale/root/region/list": {
      "filePath": "$locale/root/region/list.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/root/resource/$id": {
      "filePath": "$locale/root/resource/$id.tsx",
      "parent": "/$locale/root",
      "children": [
        "/$locale/root/resource/$id/view"
      ]
    },
    "/$locale/root/resource/list": {
      "filePath": "$locale/root/resource/list.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/root/tag/list": {
      "filePath": "$locale/root/tag/list.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/root/user/$id": {
      "filePath": "$locale/root/user/$id.tsx",
      "parent": "/$locale/root",
      "children": [
        "/$locale/root/user/$id/view",
        "/$locale/root/user/$id/building/list"
      ]
    },
    "/$locale/root/user/list": {
      "filePath": "$locale/root/user/list.tsx",
      "parent": "/$locale/root"
    },
    "/$locale/game/blueprint/$id/conflicts": {
      "filePath": "$locale/game/blueprint/$id/conflicts.tsx",
      "parent": "/$locale/game/blueprint/$id"
    },
    "/$locale/game/blueprint/$id/dependencies": {
      "filePath": "$locale/game/blueprint/$id/dependencies.tsx",
      "parent": "/$locale/game/blueprint/$id"
    },
    "/$locale/game/blueprint/$id/production": {
      "filePath": "$locale/game/blueprint/$id/production.tsx",
      "parent": "/$locale/game/blueprint/$id"
    },
    "/$locale/game/blueprint/$id/requirements": {
      "filePath": "$locale/game/blueprint/$id/requirements.tsx",
      "parent": "/$locale/game/blueprint/$id"
    },
    "/$locale/game/blueprint/$id/view": {
      "filePath": "$locale/game/blueprint/$id/view.tsx",
      "parent": "/$locale/game/blueprint/$id"
    },
    "/$locale/game/blueprint/production/$id": {
      "filePath": "$locale/game/blueprint/production/$id.tsx",
      "parent": "/$locale/game",
      "children": [
        "/$locale/game/blueprint/production/$id/dependencies",
        "/$locale/game/blueprint/production/$id/requirements",
        "/$locale/game/blueprint/production/$id/resources"
      ]
    },
    "/$locale/map/$mapId/blueprint/$blueprintId": {
      "filePath": "$locale/map/$mapId/blueprint/$blueprintId.tsx",
      "parent": "/$locale/map/$mapId",
      "children": [
        "/$locale/map/$mapId/blueprint/$blueprintId/requirements"
      ]
    },
    "/$locale/map/$mapId/building/$buildingId": {
      "filePath": "$locale/map/$mapId/building/$buildingId.tsx",
      "parent": "/$locale/map/$mapId",
      "children": [
        "/$locale/map/$mapId/building/$buildingId/demand",
        "/$locale/map/$mapId/building/$buildingId/inventory",
        "/$locale/map/$mapId/building/$buildingId/link",
        "/$locale/map/$mapId/building/$buildingId/supply",
        "/$locale/map/$mapId/building/$buildingId/transport",
        "/$locale/map/$mapId/building/$buildingId/view",
        "/$locale/map/$mapId/building/$buildingId/production/$productionId",
        "/$locale/map/$mapId/building/$buildingId/production/list",
        "/$locale/map/$mapId/building/$buildingId/production/queue"
      ]
    },
    "/$locale/map/$mapId/building/list": {
      "filePath": "$locale/map/$mapId/building/list.tsx",
      "parent": "/$locale/map/$mapId"
    },
    "/$locale/map/$mapId/land/$landId": {
      "filePath": "$locale/map/$mapId/land/$landId.tsx",
      "parent": "/$locale/map/$mapId",
      "children": [
        "/$locale/map/$mapId/land/$landId/construction"
      ]
    },
    "/$locale/map/$mapId/land/list": {
      "filePath": "$locale/map/$mapId/land/list.tsx",
      "parent": "/$locale/map/$mapId"
    },
    "/$locale/root/blueprint/$id/conflicts": {
      "filePath": "$locale/root/blueprint/$id/conflicts.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/dependencies": {
      "filePath": "$locale/root/blueprint/$id/dependencies.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/edit": {
      "filePath": "$locale/root/blueprint/$id/edit.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/inventory": {
      "filePath": "$locale/root/blueprint/$id/inventory.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/production": {
      "filePath": "$locale/root/blueprint/$id/production.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/requirements": {
      "filePath": "$locale/root/blueprint/$id/requirements.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/$id/view": {
      "filePath": "$locale/root/blueprint/$id/view.tsx",
      "parent": "/$locale/root/blueprint/$id"
    },
    "/$locale/root/blueprint/production/$id": {
      "filePath": "$locale/root/blueprint/production/$id.tsx",
      "parent": "/$locale/root",
      "children": [
        "/$locale/root/blueprint/production/$id/dependencies",
        "/$locale/root/blueprint/production/$id/requirements",
        "/$locale/root/blueprint/production/$id/resources"
      ]
    },
    "/$locale/root/region/$id/view": {
      "filePath": "$locale/root/region/$id/view.tsx",
      "parent": "/$locale/root/region/$id"
    },
    "/$locale/root/resource/$id/view": {
      "filePath": "$locale/root/resource/$id/view.tsx",
      "parent": "/$locale/root/resource/$id"
    },
    "/$locale/root/user/$id/view": {
      "filePath": "$locale/root/user/$id/view.tsx",
      "parent": "/$locale/root/user/$id"
    },
    "/$locale/game/blueprint/production/$id/dependencies": {
      "filePath": "$locale/game/blueprint/production/$id/dependencies.tsx",
      "parent": "/$locale/game/blueprint/production/$id"
    },
    "/$locale/game/blueprint/production/$id/requirements": {
      "filePath": "$locale/game/blueprint/production/$id/requirements.tsx",
      "parent": "/$locale/game/blueprint/production/$id"
    },
    "/$locale/game/blueprint/production/$id/resources": {
      "filePath": "$locale/game/blueprint/production/$id/resources.tsx",
      "parent": "/$locale/game/blueprint/production/$id"
    },
    "/$locale/map/$mapId/blueprint/$blueprintId/requirements": {
      "filePath": "$locale/map/$mapId/blueprint/$blueprintId/requirements.tsx",
      "parent": "/$locale/map/$mapId/blueprint/$blueprintId"
    },
    "/$locale/map/$mapId/building/$buildingId/demand": {
      "filePath": "$locale/map/$mapId/building/$buildingId/demand.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/inventory": {
      "filePath": "$locale/map/$mapId/building/$buildingId/inventory.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/link": {
      "filePath": "$locale/map/$mapId/building/$buildingId/link.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/supply": {
      "filePath": "$locale/map/$mapId/building/$buildingId/supply.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/transport": {
      "filePath": "$locale/map/$mapId/building/$buildingId/transport.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/view": {
      "filePath": "$locale/map/$mapId/building/$buildingId/view.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/land/$landId/construction": {
      "filePath": "$locale/map/$mapId/land/$landId/construction.tsx",
      "parent": "/$locale/map/$mapId/land/$landId"
    },
    "/$locale/map/$mapId/road/$roadId/view": {
      "filePath": "$locale/map/$mapId/road/$roadId/view.tsx",
      "parent": "/$locale/map/$mapId"
    },
    "/$locale/root/blueprint/production/$id/dependencies": {
      "filePath": "$locale/root/blueprint/production/$id/dependencies.tsx",
      "parent": "/$locale/root/blueprint/production/$id"
    },
    "/$locale/root/blueprint/production/$id/requirements": {
      "filePath": "$locale/root/blueprint/production/$id/requirements.tsx",
      "parent": "/$locale/root/blueprint/production/$id"
    },
    "/$locale/root/blueprint/production/$id/resources": {
      "filePath": "$locale/root/blueprint/production/$id/resources.tsx",
      "parent": "/$locale/root/blueprint/production/$id"
    },
    "/$locale/root/user/$id/building/list": {
      "filePath": "$locale/root/user/$id/building/list.tsx",
      "parent": "/$locale/root/user/$id"
    },
    "/$locale/map/$mapId/building/$buildingId/production/$productionId": {
      "filePath": "$locale/map/$mapId/building/$buildingId/production/$productionId.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId",
      "children": [
        "/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements"
      ]
    },
    "/$locale/map/$mapId/building/$buildingId/production/list": {
      "filePath": "$locale/map/$mapId/building/$buildingId/production/list.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/production/queue": {
      "filePath": "$locale/map/$mapId/building/$buildingId/production/queue.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId"
    },
    "/$locale/map/$mapId/building/$buildingId/production/$productionId/requirements": {
      "filePath": "$locale/map/$mapId/building/$buildingId/production/$productionId/requirements.tsx",
      "parent": "/$locale/map/$mapId/building/$buildingId/production/$productionId"
    }
  }
}
ROUTE_MANIFEST_END */
